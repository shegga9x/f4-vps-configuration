# Main HTTP server block - Redirects all HTTP traffic to HTTPS
server {
    listen 80;
    server_name appf4.io.vn;
    
    # Allow Let's Encrypt ACME challenge
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

# Keycloak server block
server {
    listen 443 ssl;
    server_name keycloak.appf4.io.vn;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/appf4.io.vn/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/appf4.io.vn/privkey.pem;

    location = /realms/jhipster/protocol/openid-connect/token {
        proxy_pass         http://keycloak:9080;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Forwarded-Proto https;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_request_buffering off;
    }

    # All other routes
    location / {
        proxy_pass         http://keycloak:9080;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Forwarded-Proto https;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
    }

}

# Redis server block
server {
    listen 443 ssl;
    server_name redis.appf4.io.vn;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/appf4.io.vn/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/appf4.io.vn/privkey.pem;

    location / {
        proxy_pass http://redis:6379;
        proxy_set_header Host redis:6379;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto https;
    }
}

# Main application server block
server {
    listen 443 ssl;
    server_name appf4.io.vn;

    ssl_certificate /etc/letsencrypt/live/appf4.io.vn/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/appf4.io.vn/privkey.pem;

    location / {
        proxy_pass https://microservices.appf4.io.vn;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# minio server block
server {
    listen 443 ssl;
    server_name minio.appf4.io.vn;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/appf4.io.vn/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/appf4.io.vn/privkey.pem;

    client_max_body_size 5G;
    # MinIO API endpoint
    location / {
        proxy_pass http://minio:9000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; 
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # MinIO Console (UI)
    location /ui/ {
        proxy_pass http://minio:9001/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_buffering off;
        proxy_redirect off;
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-Prefix /ui;
    }
}
# Kafdrop server block with Keycloak authentication
server {
    listen 443 ssl;
    server_name kafdrop.appf4.io.vn;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/appf4.io.vn/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/appf4.io.vn/privkey.pem;

    # DNS resolver for OpenID Connect
    resolver 8.8.8.8 ipv6=off;

    location / {
        # OpenID Connect authentication
        access_by_lua_block {
            local opts = {
                redirect_uri = "https://kafdrop.appf4.io.vn/oauth2/callback",
                discovery = "https://keycloak.appf4.io.vn/realms/jhipster/.well-known/openid-configuration",
                client_id = "web_app",
                client_secret = "",
                scope = "openid email profile",
                ssl_verify = "no"
            }
            local res, err = require("resty.openidc").authenticate(opts)
            if err then
                ngx.status = 403
                ngx.say(err)
                ngx.exit(ngx.HTTP_FORBIDDEN)
            end
        }

        # Proxy configuration
        proxy_pass http://kafka-ui:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

# Consul server block with Keycloak authentication
server {
    listen 443 ssl;
    server_name consul.appf4.io.vn;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/appf4.io.vn/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/appf4.io.vn/privkey.pem;

    # DNS resolver for OpenID Connect
    resolver 8.8.8.8 ipv6=off;

    # Allow unauthenticated access to API endpoints
    location ~* ^/v1/ {
        proxy_pass http://consul:8500;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Authorization $http_authorization;
    }

    # Protected routes with OpenID Connect
    location / {
        # OpenID Connect authentication
        access_by_lua_block {
            local opts = {
                redirect_uri = "https://consul.appf4.io.vn/oauth2/callback",
                discovery = "https://keycloak.appf4.io.vn/realms/jhipster/.well-known/openid-configuration",
                client_id = "web_app",
                client_secret = "",
                scope = "openid email profile",
                ssl_verify = "no"
            }
            local res, err = require("resty.openidc").authenticate(opts)
            if err then 
                ngx.status = 403
                ngx.say(err)
                ngx.exit(ngx.HTTP_FORBIDDEN)
            end
        }

        # Proxy configuration
        proxy_pass http://consul:8500;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Authorization $http_authorization;
    }
}

# RedisInsight server block with Keycloak authentication
server {
    listen 443 ssl;
    server_name redisinsiight.appf4.io.vn;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/appf4.io.vn/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/appf4.io.vn/privkey.pem;

    # DNS resolver for OpenID Connect
    resolver 8.8.8.8 ipv6=off;

    location / {
        # OpenID Connect authentication
        access_by_lua_block {
            local opts = {
                redirect_uri = "https://redisinsiight.appf4.io.vn/oauth2/callback",
                discovery = "https://keycloak.appf4.io.vn/realms/jhipster/.well-known/openid-configuration",
                client_id = "web_app",
                client_secret = "",
                scope = "openid email profile",
                ssl_verify = "no"
            }
            local res, err = require("resty.openidc").authenticate(opts)
            if err then 
                ngx.status = 403
                ngx.say(err)
                ngx.exit(ngx.HTTP_FORBIDDEN)
            end
        }

        # Proxy configuration
        proxy_pass http://redisinsight:5540;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Kibana server block with Keycloak authentication
server {
    listen 443 ssl;
    server_name searchui.appf4.io.vn;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/appf4.io.vn/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/appf4.io.vn/privkey.pem;

    location / {
        # Proxy configuration
        proxy_pass http://kibana:5601;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
# Kibana server block with Keycloak authentication
server {
    listen 443 ssl;
    server_name jenkins.appf4.io.vn;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/appf4.io.vn/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/appf4.io.vn/privkey.pem;

    location / {
        # Proxy configuration
        proxy_pass http://jenkins:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
